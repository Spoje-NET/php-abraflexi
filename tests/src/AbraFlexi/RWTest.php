<?php

declare(strict_types=1);

/**
 * This file is part of the EaseCore package.
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\AbraFlexi;

use AbraFlexi\RW;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2024-10-02 at 10:07:12.
 */
class RWTest extends \PHPUnit\Framework\TestCase
{
    protected RW $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new RW();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

//    /**
//     * @covers \AbraFlexi\RW::setUp
//     *
//     * @todo   Implement testsetUp().
//     */
//    public function testsetUp(): void
//    {
//        $this->assertEquals('', $this->object->setUp());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::insertToAbraFlexi
//     *
//     * @todo   Implement testinsertToAbraFlexi().
//     */
//    public function testinsertToAbraFlexi(): void
//    {
//        $this->assertEquals('', $this->object->insertToAbraFlexi());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::parseResponse
//     *
//     * @todo   Implement testparseResponse().
//     */
//    public function testparseResponse(): void
//    {
//        $this->assertEquals('', $this->object->parseResponse());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::parseError
//     *
//     * @todo   Implement testparseError().
//     */
//    public function testparseError(): void
//    {
//        $this->assertEquals('', $this->object->parseError());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::assignResultIDs
//     *
//     * @todo   Implement testassignResultIDs().
//     */
//    public function testassignResultIDs(): void
//    {
//        $this->assertEquals('', $this->object->assignResultIDs());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::extractResultIDs
//     *
//     * @todo   Implement testextractResultIDs().
//     */
//    public function testextractResultIDs(): void
//    {
//        $this->assertEquals('', $this->object->extractResultIDs());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::getLastInsertedId
//     *
//     * @todo   Implement testgetLastInsertedId().
//     */
//    public function testgetLastInsertedId(): void
//    {
//        $this->assertEquals('', $this->object->getLastInsertedId());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::deleteFromAbraFlexi
//     *
//     * @todo   Implement testdeleteFromAbraFlexi().
//     */
//    public function testdeleteFromAbraFlexi(): void
//    {
//        $this->assertEquals('', $this->object->deleteFromAbraFlexi());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::takeData
//     *
//     * @todo   Implement testtakeData().
//     */
//    public function testtakeData(): void
//    {
//        $this->assertEquals('', $this->object->takeData());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::controlMandatoryColumns
//     *
//     * @todo   Implement testcontrolMandatoryColumns().
//     */
//    public function testcontrolMandatoryColumns(): void
//    {
//        $this->assertEquals('', $this->object->controlMandatoryColumns());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::controlReadOnlyColumns
//     *
//     * @todo   Implement testcontrolReadOnlyColumns().
//     */
//    public function testcontrolReadOnlyColumns(): void
//    {
//        $this->assertEquals('', $this->object->controlReadOnlyColumns());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::timestampToFlexiDate
//     *
//     * @todo   Implement testtimestampToFlexiDate().
//     */
//    public function testtimestampToFlexiDate(): void
//    {
//        $this->assertEquals('', $this->object->timestampToFlexiDate());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::timestampToFlexiDateTime
//     *
//     * @todo   Implement testtimestampToFlexiDateTime().
//     */
//    public function testtimestampToFlexiDateTime(): void
//    {
//        $this->assertEquals('', $this->object->timestampToFlexiDateTime());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::addArrayToBranch
//     *
//     * @todo   Implement testaddArrayToBranch().
//     */
//    public function testaddArrayToBranch(): void
//    {
//        $this->assertEquals('', $this->object->addArrayToBranch());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::addObjectToBranch
//     *
//     * @todo   Implement testaddObjectToBranch().
//     */
//    public function testaddObjectToBranch(): void
//    {
//        $this->assertEquals('', $this->object->addObjectToBranch());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::vazbaAdd
//     *
//     * @todo   Implement testvazbaAdd().
//     */
//    public function testvazbaAdd(): void
//    {
//        $this->assertEquals('', $this->object->vazbaAdd());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::vazbaDel
//     *
//     * @todo   Implement testvazbaDel().
//     */
//    public function testvazbaDel(): void
//    {
//        $this->assertEquals('', $this->object->vazbaDel());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::getJsonizedData
//     */
//    public function testgetJsonizedData(): void
//    {
//        $this->assertEquals('{"winstrom":{"@version":"1.0","":null,"@atomic":false}}', $this->object->getJsonizedData());
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::getDataForJSON
//     *
//     * @todo   Implement testgetDataForJSON().
//     */
//    public function testgetDataForJSON(): void
//    {
//        $this->assertEquals('', $this->object->getDataForJSON());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::sync
//     *
//     * @todo   Implement testsync().
//     */
//    public function testsync(): void
//    {
//        $this->assertEquals('', $this->object->sync());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::success
//     *
//     * @todo   Implement testsuccess().
//     */
//    public function testsuccess(): void
//    {
//        $this->assertEquals('', $this->object->success());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::copy
//     *
//     * @todo   Implement testcopy().
//     */
//    public function testcopy(): void
//    {
//        $this->assertEquals('', $this->object->copy());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::performAction
//     *
//     * @todo   Implement testperformAction().
//     */
//    public function testperformAction(): void
//    {
//        $this->assertEquals('', $this->object->performAction());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::addExternalID
//     *
//     * @todo   Implement testaddExternalID().
//     */
//    public function testaddExternalID(): void
//    {
//        $this->assertEquals('', $this->object->addExternalID());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::changeExternalID
//     *
//     * @todo   Implement testchangeExternalID().
//     */
//    public function testchangeExternalID(): void
//    {
//        $this->assertEquals('', $this->object->changeExternalID());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::sendUnsent
//     *
//     * @todo   Implement testsendUnsent().
//     */
//    public function testsendUnsent(): void
//    {
//        $this->assertEquals('', $this->object->sendUnsent());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::setDataValue
//     *
//     * @todo   Implement testsetDataValue().
//     */
//    public function testsetDataValue(): void
//    {
//        $this->assertEquals('', $this->object->setDataValue());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
//
//    /**
//     * @covers \AbraFlexi\RW::flexiEditUrl
//     *
//     * @todo   Implement testflexiEditUrl().
//     */
//    public function testflexiEditUrl(): void
//    {
//        $this->assertEquals('', $this->object->flexiEditUrl());
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete('This test has not been implemented yet.');
//    }
}
