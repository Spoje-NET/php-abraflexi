<?php

declare(strict_types=1);

/**
 * This file is part of the SpojeNet\AbraFlexi package.
 *
 * (c) 2019-2024 SpojeNet s.r.o. <http://spoje.net/>
 * (c) 2025 SpojeNetIT s.r.o. <http://spojenet.cz/>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\AbraFlexi;

use AbraFlexi\Exception;
use AbraFlexi\RO;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2024-10-02 at 10:07:41.
 */
class ExceptionTest extends \PHPUnit\Framework\TestCase
{
    /**
     * @covers \AbraFlexi\Exception
     */
    public function testException(): void
    {
        // Create a mock for the RO class
        $caller = $this->createMock(RO::class);

        // Configure the mock.
        $caller->method('getErrors')
            ->willReturn(['First Error', 'Second Error']);
        $caller->lastCurlResponse = 'Raw Server Response';
        $caller->lastResponseCode = 400;

        $exception = new Exception('Test Exception', $caller);

        $this->assertEquals('First Error', $exception->getErrorMessage());
        $this->assertEquals(['First Error', 'Second Error'], $exception->getErrorMessages());
        $this->assertEquals('Raw Server Response', $exception->getServerResponse());
        $this->assertEquals(400, $exception->getCode());
        $this->assertStringContainsString('Test Exception', $exception->getMessage());
    }
}
